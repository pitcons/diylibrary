"""
Django settings for diylibrary project.

Generated by 'django-admin startproject' using Django 1.8.6.

For more information on this file, see
https://docs.djangoproject.com/en/1.8/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.8/ref/settings/
"""

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
import os
import ConfigParser

BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

CONFIG = ConfigParser.RawConfigParser()
CONFIG.read(os.path.join(BASE_DIR, 'settings.ini'))

def ini_get(section, key, default):
    try:
        return CONFIG.get(section, key)
    except ConfigParser.NoSectionError:
        return default


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.8/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = ini_get('common', 'SECRET_KEY', 'ox-s#i9xec6*wyl1fvw*agwbu-m&$i!6&1e%qshvlm&irho6r#')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = ini_get("common", "DEBUG", 'true').lower() == 'true'

ATOMIC_REQUESTS = True

ALLOWED_HOSTS = [
    'diylibrary.free-node.ru',
]


# Application definition

INSTALLED_APPS = (
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'tagging',
    'bootstrap3',
    'url_tools',
    'core',
    'tagging_autocomplete',
)

MIDDLEWARE_CLASSES = (
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.middleware.security.SecurityMiddleware',
)

ROOT_URLCONF = 'diylibrary.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': ['templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'url_tools.context_processors.current_url',
            ],
        },
    },
]

WSGI_APPLICATION = 'diylibrary.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.8/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'HOST': ini_get('database', 'HOST', '127.0.0.1'),
        'NAME': ini_get('database', 'NAME', 'diylibrary'),
        'USER': ini_get('database', 'USER', 'diylibrary'),
        'PASSWORD': ini_get('database', 'PASSWORD', 'hackme'),
    }
}


# Internationalization
# https://docs.djangoproject.com/en/1.8/topics/i18n/

LANGUAGE_CODE = 'ru-ru'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.8/howto/static-files/

STATIC_URL = '/static/'

STATICFILES_DIRS = (
    os.path.join(BASE_DIR, "static"),
)

BOOTSTRAP3 = {
    'css_url': 'https://bootswatch.com/lumen/bootstrap.min.css',
#    'css_url': 'https://bootswatch.com/flatly/bootstrap.min.css'
#    'css_url': 'https://bootswatch.com/readable/bootstrap.min.css'
#    'css_url': 'https://bootswatch.com/slate/bootstrap.min.css'
#    'css_url': 'https://bootswatch.com/yeti/bootstrap.min.css',
}
